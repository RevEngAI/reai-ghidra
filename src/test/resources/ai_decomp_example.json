{
  "status": true,
  "data": {
    "status": "success",
    "decompilation": "<CUSTOM_TYPE_0>\n<DISASM_FUNCTION_0>(\n   const char *<VAR_0>\n)\n{\n   struct <CUSTOM_TYPE_1> <VAR_1>;\n   if (<CUSTOM_TYPE_1>(<VAR_0>, &<VAR_1>) == 0) {\n       return <VAR_1>.<FIELD_VALUE_0>;\n   }\n   else {\n       return -1;\n   }\n}",
    "raw_decompilation": "<CUSTOM_TYPE_0>\n<DISASM_FUNCTION_0>(\n   const char *<VAR_0>\n)\n{\n   struct <CUSTOM_TYPE_1> <VAR_1>;\n   if (<CUSTOM_TYPE_1>(<VAR_0>, &<VAR_1>) == 0) {\n       return <VAR_1>.<FIELD_VALUE_0>;\n   }\n   else {\n       return -1;\n   }\n}",
    "function_mapping": {
      "<DISASM_FUNCTION_0>": {
        "name": "FUN_0000172e",
        "addr": 5934,
        "is_external": false
      },
      "<DISASM_FUNCTION_1>": {
        "name": "__xstat64",
        "addr": 4576,
        "is_external": true
      }
    },
    "function_mapping_full": {
      "inverse_string_map": {},
      "inverse_function_map": {
        "<DISASM_FUNCTION_0>": {
          "name": "FUN_0000172e",
          "addr": 5934,
          "is_external": false
        },
        "<DISASM_FUNCTION_1>": {
          "name": "__xstat64",
          "addr": 4576,
          "is_external": true
        }
      },
      "unmatched_functions": {},
      "unmatched_external_vars": {},
      "unmatched_custom_types": {
        "<CUSTOM_TYPE_0>": {
          "value": "std::string"
        },
        "<CUSTOM_TYPE_1>": {
          "value": "StringParser"
        }
      },
      "unmatched_strings": {},
      "unmatched_vars": {
        "<VAR_0>": {
          "value": "inputString"
        },
        "<VAR_1>": {
          "value": "parserResult"
        }
      },
      "unmatched_go_to_labels": {},
      "unmatched_custom_function_pointers": {},
      "unmatched_variadic_lists": {},
      "fields": {
        "<VAR_1>": {
          "<FIELD_VALUE_0>": {
            "value": "resultCode"
          }
        }
      }
    },
    "summary": "The function <DISASM_FUNCTION_0> takes a character pointer as input. It calls another function with the input and a pointer to a struct. If the call is successful, it returns a value from the struct. Otherwise, it returns -1.\n"
  },
  "message": null,
  "errors": null,
  "meta": {
    "pagination": null
  }
}