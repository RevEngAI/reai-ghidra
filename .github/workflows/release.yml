name: release

on:
  release:
    types: [published]

# Required for updating published release contents
permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - ghidra: "11.4.1"
          - java: "21"
          - ghidra: "11.4"
            java: "21"
          - ghidra: "11.3.2"
            java: "21"
          - ghidra: "11.3.1"
            java: "21"
          - ghidra: "11.3"
            java: "21"
          - ghidra: "11.2.1"
            java: "21"
          - ghidra: "11.2"
            java: "21"
          - ghidra: "11.1.2"
            java: "17"
          - ghidra: "11.0.3"
            java: "17"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin

      - name: Install Ghidra ${{ matrix.ghidra }}
        uses: antoniovazquezblanco/setup-ghidra@v2.0.4
        with:
          auth_token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ matrix.ghidra }}

      - name: Inject GH release info into plugin
        run: echo ${{github.event.release.tag_name}} > src/main/resources/reai_ghidra_plugin_version.txt

      - name: Build plugin via gradle
        run: ./gradlew buildExtension

      - name: Rename ZIP for upload
        run: mv dist/*_${{matrix.ghidra}}_*.zip dist/ghidra_${{matrix.ghidra}}_reai-ghidra.zip

#      - name: Check for Existing Asset
#        id: check_asset
#        run: |
#          asset_name=ghidra_${{matrix.ghidra}}_${{matrix.name}}.zip
#          asset_id=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.release.tag_name }}" |
#                     jq -r ".assets[] | select(.name == \"$asset_name\") | .id")
#          echo "Existing Asset ID: $asset_id"
#          echo "::set-output name=asset_id::$asset_id"
#        continue-on-error: true
#
#      - name: Delete Existing Asset
#        if: steps.check_asset.outputs.asset_id != ''
#        run: |
#          asset_id=${{ steps.check_asset.outputs.asset_id }}
#          echo "Deleting Asset ID: $asset_id"
#          curl -X DELETE \
#            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#            "https://api.github.com/repos/${{ github.repository }}/releases/assets/$asset_id"

      - name: Upload release ZIP
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: gh release upload ${{github.event.release.tag_name}} dist/ghidra_${{matrix.ghidra}}_reai-ghidra.zip
